var _user$project$Main$convertNumberToListFunc = F2(
	function (inputNumber, resultList) {
		convertNumberToListFunc:
		while (true) {
			var number = A2(
				_elm_lang$core$Result$withDefault,
				0,
				_elm_lang$core$String$toInt(inputNumber));
			if (_elm_lang$core$Native_Utils.cmp(number, 0) > 0) {
				var _v0 = _elm_lang$core$Basics$toString((number / 10) | 0),
					_v1 = A2(
					_elm_lang$core$List$append,
					resultList,
					A2(
						_elm_lang$core$String$split,
						',',
						_elm_lang$core$Basics$toString(
							A2(_elm_lang$core$Basics_ops['%'], number, 10))));
				inputNumber = _v0;
				resultList = _v1;
				continue convertNumberToListFunc;
			} else {
				return A3(
					_elm_lang$core$List$foldl,
					F2(
						function (x, y) {
							return {ctor: '::', _0: x, _1: y};
						}),
					{ctor: '[]'},
					resultList);
			}
		}
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'UpdateQuery') {
			return _elm_lang$core$Native_Utils.update(
				model,
				{
					inputNumber: _p0._0,
					resultList: {ctor: '[]'}
				});
		} else {
			return _elm_lang$core$Native_Utils.update(
				model,
				{
					resultList: {ctor: '[]'},
					resultList: A2(_user$project$Main$convertNumberToListFunc, _p0._0, _p0._1)
				});
		}
	});
var _user$project$Main$init = {
	inputNumber: '',
	resultList: {ctor: '[]'}
};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {inputNumber: a, resultList: b};
	});
var _user$project$Main$ConvertNumberToList = F2(
	function (a, b) {
		return {ctor: 'ConvertNumberToList', _0: a, _1: b};
	});
var _user$project$Main$UpdateQuery = function (a) {
	return {ctor: 'UpdateQuery', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('main-container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$header,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h1,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('ELM Assignment 5'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$table,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$tr,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$td,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Enter Number :'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$td,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$input,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('inputCls'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$placeholder('Enter number 123456...'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$UpdateQuery),
															_1: {ctor: '[]'}
														}
													}
												},
												{ctor: '[]'}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('srchBtn'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									A2(_user$project$Main$ConvertNumberToList, model.inputNumber, model.resultList)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Search Element'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(model.resultList)),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update})();
